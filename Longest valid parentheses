Question:
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.
Example:
Input: "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()"

Solution:
def longestValidParentheses(s):
    if len(s) < 2:
        return 0
    dp = [0]*len(s)
    for i in range(1, len(s)):
        if (s[i] == ')'):
            if (s[i-1] == '('):
                dp[i] = (dp[i-2] if i>=2 else 0) + 2
            elif (i-dp[i-1]>0 and s[i-dp[i-1]-1] == '('):
                dp[i] = dp[i-1]+ (dp[i-dp[i-1]-2] if (i-dp[i-1] >=2) else 0) + 2
    return max(dp)

longestValidParentheses(')()()')
